<#+

public List<string> GetModelsFromDirectories(params string[] relDirectories)
{
    var models = new List<string>();
    foreach(var directory in relDirectories)
    {
        var absDir = GetProjectDirectory() + @"\" + directory;
        var paths = Directory.GetFiles(absDir, "*.cs");
        foreach(var path in paths)
        {
            var model = Path.GetFileNameWithoutExtension(path);
            models.Add(model);
        }
    }
    return models;
}

public string GetSolutionDirectory()
{
	var serviceProvider = this.Host as IServiceProvider;
	var dte = serviceProvider.GetService(typeof(EnvDTE.DTE)) as EnvDTE.DTE;
	return System.IO.Path.GetDirectoryName(dte.Solution.FullName);
}

public string GetProjectDirectory()
{
	var serviceProvider = this.Host as IServiceProvider;
	var dte = serviceProvider.GetService(typeof(EnvDTE.DTE)) as EnvDTE.DTE;
    var projItem = dte.Solution.FindProjectItem(Host.TemplateFile);
    var project = projItem.ContainingProject;
    var projDir = System.IO.Path.GetDirectoryName(project.FileName);
    return projDir;
}

public static void ArgumentNotNull<T>(T arg, string name) where T : class
{
    if (arg == null)
    {
        throw new ArgumentNullException(name);
    }
}

#>